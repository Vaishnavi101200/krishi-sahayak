version: '3.8'

services:
  # Main application
  app:
    build: .
    ports:
      - "5000:5000"
    volumes:
      - .:/app
      - ./logs:/app/logs
    env_file:
      - .env
    depends_on:
      - mongodb
      - redis
      - kafka
    restart: unless-stopped
    networks:
      - krishi_network

  # MongoDB
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - krishi_network

  # Redis for caching
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - krishi_network

  # Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - krishi_network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - krishi_network

  # Background worker for scraping
  scraper:
    build: .
    command: python -m scrapers.scheme_scraper
    volumes:
      - .:/app
      - ./logs:/app/logs
    env_file:
      - .env
    depends_on:
      - app
      - mongodb
      - kafka
    restart: unless-stopped
    networks:
      - krishi_network

  # Background worker for processing
  processor:
    build: .
    command: python -m nlp.scheme_processor
    volumes:
      - .:/app
      - ./logs:/app/logs
    env_file:
      - .env
    depends_on:
      - app
      - mongodb
      - kafka
    restart: unless-stopped
    networks:
      - krishi_network

volumes:
  mongodb_data:
  redis_data:

networks:
  krishi_network:
    driver: bridge 